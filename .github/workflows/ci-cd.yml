---
name: CI/CD (Continuous Integration/Continuous Deployment) Pipeline
on:
  push:
    branches: ["**"]
    tags: ["github-v*.*.*"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Restore Docker cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: docker-buildx-${{ github.sha }}
          restore-keys: |
            docker-buildx-
      -
        name: Build Docker image (CI)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ vars.REGISTRY_IMAGE }}:ci
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      -
        name: Update Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      -
        name: Docker image list
        run: docker image ls

#  test:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: Checkout code
#        uses: actions/checkout@v4
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      -
#        name: Load Docker image from previous job
#        run: docker image ls
#      -
#        name: Run unittests inside Docker
#        run: |
#          docker run --rm ${{ vars.REGISTRY_IMAG }}:ci pytest tests/ -v
#      -
#        name: Lint with flake8
#        run: |
#          docker run --rm ${{ vars.REGISTRY_IMAG }}:ci flake8 app tests
#
#  deploy:
#    needs: [build, test]
#    if:github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/github-v')
#    runs-on: ubuntu-latest
#    env:
#      RENDER_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
#    steps:
#      -
#        name: Checkout code
#        uses: actions/checkout@v4
#      -
#        name: Set up QEMU (multi-platform)
#        uses: docker/setup-qemu-action@v3
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      -
#        name: Restore Docker cache
#        uses: actions/cache@v4
#        with:
#          path: /tmp/.buildx-cache
#          key: docker-buildx-${{ github.sha }}
#          restore-keys: |
#            docker-buildx-
#      -
#        name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          registry: docker.io
#          username: ${{ vars.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      -
#        name: Build and push a multi-platform Docker image
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          file: ./Dockerfile
#          platforms: linux/amd64,linux/arm64
#          tags: |
#            ${{ vars.REGISTRY_IMAGE }}:github-v${{ github.ref_name }}
#            ${{ vars.REGISTRY_IMAGE }}:github-latest
#          load: true
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
#      -
#        name: Update Docker cache
#        run: |
#          rm -rf /tmp/.buildx-cache
#          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
#      -
#        name: Trigger deploy with Render CLI
#        run: curl https://api.render.com/deploy/${{ env.RENDER_HOOK }}
